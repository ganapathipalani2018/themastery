version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: resumebuilder-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: resumebuilderdb
      POSTGRES_USER: resumeuser
      POSTGRES_PASSWORD: resumepass123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5440:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - resumebuilder-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U resumeuser -d resumebuilderdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resumebuilder-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: resumebuilderdb
      DB_USER: resumeuser
      DB_PASSWORD: resumepass123
      JWT_SECRET: dev-jwt-secret-key-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-key-change-in-production
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - resumebuilder-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: resumebuilder-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_APP_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - resumebuilder-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  resumebuilder-network:
    driver: bridge 